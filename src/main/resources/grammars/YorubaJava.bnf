{
  // Grammar-Kit header: Defines package and extends Java-like structure
  extends "JavaParser.bnf";  // Inherit basic Java rules (classes, methods, etc.)
  // Custom Yoruba tokens (keywords as alternatives)
}

// Root rule for Yoruba Java file
yorubaJavaFile : statement* ;

// Yoruba Keywords (with variants; lexer will match any)
CLASS : 'kíláàsì' | 'ìṣọ̀rí' | 'isori' | 'kilasi' ;
PUBLIC : 'gbangba' ;
STATIC : 'àìmì' | 'aimi' ;
VOID : 'òfo' | 'ofo' ;
MAIN : 'àkọ́kọ́' | 'akoko' ;
STRING_TYPE : 'okùn' | 'okun' ;
INT_TYPE : 'nọmba' | 'nomba' ;
IF : 'tí' | 'ti' ;
ELSE : 'tí kò ṣe bẹ́ẹ̀' | 'eko se bee' | 'else' ;  // Allow English fallback
PRINT : 'tẹ' | 'te' | 'print' ;

// Basic statements (extend Java)
statement : classDeclaration | methodDeclaration | expressionStatement | ifStatement ;

classDeclaration : CLASS IDENTIFIER '{' fieldDeclaration* methodDeclaration* '}' ;
fieldDeclaration : (PUBLIC)? (INT_TYPE | STRING_TYPE) IDENTIFIER '=' literal ';' ;
methodDeclaration : PUBLIC STATIC VOID MAIN '(' STRING_TYPE '[' ']' IDENTIFIER ')' '{' statement* '}' ;
ifStatement : IF '(' expression ')' '{' statement* '}' (ELSE '{' statement* '}')? ;
expressionStatement : PRINT '(' STRING_LITERAL ')' ';' | assignment ';' ;
assignment : IDENTIFIER '=' literal ;
expression : literal | IDENTIFIER | expression '+' expression ;  // Simple arith
literal : NUMBER | STRING_LITERAL | 'òtítọ́' | 'òdì' | 'true' | 'false' | 'null' ;  // Booleans/null

// Tokens (inherited + custom)
IDENTIFIER : [a-zA-Z_][a-zA-Z0-9_]* ;  // Supports Yoruba chars (UTF-8)
NUMBER : [0-9]+ ;
STRING_LITERAL : '"' [^"]* '"' ;
WHITE_SPACE : ' ' | '\t' | '\n' | '\r' ;
LINE_COMMENT : '//' ~[\r\n]* ;
BLOCK_COMMENT : '/*' .*? '*/' ;
OPERATOR_OR_SYMBOL : '+' | '-' | '*' | '/' | '=' | '(' | ')' | '{' | '}';